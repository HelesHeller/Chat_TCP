<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAHYAAAB2AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABhWcN7Z2DFtVtUwGoAAP8BAAAAAAAAAAAAAAAAXFW9aWVgxbVfV8F7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaGHHurCy9P+ZmOX3YVrCtTMzzAVAQL8EYVrCs5iX5fawsvT/aGLGuwAA
        AAAAAAAAAAAAAAAAAABfVcFjZFzDrlhQu9OusPP/sLL0/6Gi6/xgWMGcXlnAm6Ki6vuwsvT/r7Hz/1lP
        vNRkXMOuX1jBZgAAAAAAAAAAZl/GtrCy9P+srvH/sLL0/7Cy9P+wsvT/fXrT5H130uOwsvT/sLL0/7Cy
        9P+srvH/sLL0/2dgxrkAAAAAAAAAAFtUwGqZmOX3sLL0/7Cy9P+wsvT/sLL0/6+x8/+vsfP/r7H0/7Cy
        9P+wsvT/sLL0/5qZ5fdbVL1tAAAAAAAAAAAAAP8BYVnBsZ6f6fqwsvT/kY/h81lQvdyusPP/sLL0/2li
        xdl1cM/lsLL0/6Cg6vphWsGyAAD/AQAAAAAAAAAAS0S0ImFawa10b83nsLL0/6en7v5vacvwnJvn/6Wl
        7f9uacr1mprn9bCy9P93c9HnYVnBsU5HuCQAAAAAWVG7PHVwzuCtrvH/sLL0/6+x9P+qrPH/r7H0/3Bq
        y/9vasv/ra/y/6us8f+wsfP/sLL0/6yu8v92cs/gWVG+P2JcwsCqrPH/sLL0/7Cy9P+CgNfqVUy64Xx4
        0/94c9D/eHPQ/3x40/9VTbrfhIDY67Cy9P+wsvT/qqvw/2Jaw75VR7gkX1bBlHl10eOwsvT/qarw/5eX
        5PewsvT/lJPi/5ST4v+wsvT/mZjl96mq8P+wsvT/eHPR419Wv49NRrkhAAAAAGBXv4+dnOf4sLL0/7Cy
        9P+wsvT/sLL0/2lixthqY8jYsLL0/7Cy9P+wsvT/sLL0/56d6PlgV8CSAAAAAAAAAABfWMC2jIrc8ZCO
        4PZ1cM7cdnDO5bCy9P+oqO//qKjv/7Cy9P91b83kc2/O24+M3/SKiNvtX1jCswAAAAAAAAAAQEC/BEs+
        tClKQLE0VTmqCXJtzduwsvT/sLL0/7Cy9P+wsvT/cm3N21VVqgZKQLUwR0CxJFVVqgMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABzbc3SsLL0/6mq7/+pqvD/sLL0/3JtzNIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAYlvDrqut8f9nYcbNZ2HGzaut8f9jW8OtAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFJJthxgWcC6WlC9NlpQvTZgWcC6Ukm2HAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4ccAAOAHAACAAQAAgAEAAIABAACAAQAAgAEAAAAAAAAAAAAAAAAAAIABAACAAQAAgAEAAPgf
        AAD4HwAA+B8AAA==
</value>
  </data>
</root>